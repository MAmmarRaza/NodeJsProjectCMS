name: CI/CD Pipeline

on:
  push:
    branches: [main]  # Runs on push to main branch
  pull_request:
    branches: [main]  # Runs on PRs to main branch
  workflow_dispatch:  # Allows manual trigger from GitHub UI
  schedule:
    - cron: "0 0 * * *"  # Runs daily at midnight UTC

env:
  GLOBAL_ENV_VAR: "Production"  # Global environment variable

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]  # Run tests on multiple Node.js versions

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4  # Gets the latest code from the repo

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: node-${{ runner.os }}-${{ matrix.node-version }}-

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

      - name: Set Output Variable
        if: success()
        id: set_var
        run: echo "DEPLOY_STATUS=Ready" >> $GITHUB_ENV

      - name: show variable
        run: echo "${{env.DEPLOY_STATUS}}"

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build  # Runs only if 'build' job succeeds
    if: github.ref == 'refs/heads/main'  # Only deploy from main branch

    steps:
      - name: Deploy to Production
        run: echo "Deploying to production...${{env.GLOBAL_ENV_VAR}}"
        env:
          API_KEY: ${{ secrets.API_KEY }}  # Using a GitHub Secret
          DEPLOY_ENV: ${{ env.DEPLOY_STATUS }}

  notify:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: deploy  # Runs only if 'deploy' succeeds

    steps:
      - name: Send Notification
        run: echo "Deployment Successful!"
